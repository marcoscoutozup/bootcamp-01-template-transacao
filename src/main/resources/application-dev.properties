# Nome da Aplicação
spring.application.name=Transações

# Formato da chave (String) recebida!
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringSerializer

# Formato da mensagem \ evento (JSON) recebida(o)!
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer

# Identificador do grupo de consumo
spring.kafka.consumer.group-id=minha-aplicacao

# Modelo de coleta do consumidor (latest, earliest, none)
spring.kafka.consumer.auto-offset-reset=latest

# Tópicos que a aplicação irá ouvir
spring.kafka.topic.transactions=transacoes

# Terminal
spring.output.ansi.enabled=always

# Postgres
spring.datasource.url=jdbc:postgresql://localhost:5433/transacao
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driverClassName=org.postgresql.Driver

# JPA
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

# Query
resultados.quantidade.maxima=10

# Security
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:18080/auth/realms/nossa-transacao
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:18080/auth/realms/nossa-transacao/protocol/openid-connect/certs

# Opentracing - Jaeger
opentracing.jaeger.enabled=true
opentracing.jaeger.service-name=${spring.application.name}
opentracing.jaeger.http-sender.url=http://localhost:14268/api/traces
opentracing.jaeger.probabilistic-sampler.sampling-rate=1
opentracing.jaeger.log-spans=false

# Actuator
management.endpoints.web.exposure.include=info,health,prometheus
management.metrics.tags.aplicacao=transações